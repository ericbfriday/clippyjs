!(function (e, t) {
  "object" == typeof exports && "undefined" != typeof module
    ? t(exports, require("react"))
    : "function" == typeof define && define.amd
      ? define(["exports", "react"], t)
      : t(
          ((e =
            "undefined" != typeof globalThis ? globalThis : e || self).clippy =
            {}),
          e.React,
        );
})(this, function (e, t) {
  "use strict";
  class n {
    constructor(e) {
      ((this.queue = []), (this.active = !1), (this.onEmptyCallback = e));
    }
    enqueue(e) {
      (this.queue.push(e),
        1 !== this.queue.length || this.active || this.progressQueue());
    }
    clear() {
      ((this.queue = []), (this.active = !1));
    }
    next() {
      ((this.active = !1), this.progressQueue());
    }
    size() {
      return this.queue.length;
    }
    isActive() {
      return this.active;
    }
    progressQueue() {
      if (!this.queue.length)
        return void (this.onEmptyCallback && this.onEmptyCallback());
      const e = this.queue.shift();
      if (!e) return;
      this.active = !0;
      e(() => this.next());
    }
  }
  class i {
    constructor(e, t, n, i) {
      ((this.sounds = {}),
        (this.overlays = []),
        (this.currentFrameIndex = 0),
        (this.exiting = !1),
        (this.started = !1),
        (this.paused = !1),
        (this.element = e),
        (this.data = n),
        (this.path = t),
        this.preloadSounds(i),
        this.setupElements());
    }
    setupElements() {
      this.overlays = [this.element];
      let e = this.element;
      this.setupElementStyle(this.element);
      for (let t = 1; t < this.data.overlayCount; t++) {
        const t = document.createElement("div");
        (this.setupElementStyle(t),
          e.appendChild(t),
          this.overlays.push(t),
          (e = t));
      }
    }
    setupElementStyle(e) {
      const [t, n] = this.data.framesize;
      ((e.style.display = "none"),
        (e.style.width = `${t}px`),
        (e.style.height = `${n}px`),
        (e.style.background = `url('${this.path}/map.png') no-repeat`));
    }
    preloadSounds(e) {
      for (const t of this.data.sounds) {
        const n = e[t];
        n && (this.sounds[t] = new Audio(n));
      }
    }
    getAnimations() {
      return Object.keys(this.data.animations);
    }
    hasAnimation(e) {
      return !!this.data.animations[e];
    }
    showAnimation(e, t) {
      return (
        (this.exiting = !1),
        !!this.hasAnimation(e) &&
          ((this.currentAnimation = this.data.animations[e]),
          (this.currentAnimationName = e),
          this.started || (this.step(), (this.started = !0)),
          (this.currentFrameIndex = 0),
          (this.currentFrame = void 0),
          (this.endCallback = t),
          !0)
      );
    }
    exitAnimation() {
      this.exiting = !0;
    }
    pause() {
      ((this.paused = !0),
        this.loop && (window.clearTimeout(this.loop), (this.loop = void 0)));
    }
    resume() {
      ((this.paused = !1), this.currentAnimation && this.step());
    }
    step() {
      if (!this.currentAnimation || this.paused) return;
      const e = Math.min(
          this.getNextAnimationFrame(),
          this.currentAnimation.frames.length - 1,
        ),
        t = !this.currentFrame || this.currentFrameIndex !== e;
      ((this.currentFrameIndex = e),
        (this.atLastFrame() && this.currentAnimation.useExitBranching) ||
          (this.currentFrame =
            this.currentAnimation.frames[this.currentFrameIndex]),
        this.draw(),
        this.playSound(),
        this.currentFrame &&
          (this.loop = window.setTimeout(
            () => this.step(),
            this.currentFrame.duration,
          )),
        this.endCallback &&
          t &&
          this.atLastFrame() &&
          (this.currentAnimation.useExitBranching && !this.exiting
            ? this.endCallback(this.currentAnimationName, i.States.WAITING)
            : this.endCallback(this.currentAnimationName, i.States.EXITED)));
    }
    getNextAnimationFrame() {
      if (!this.currentAnimation) return 0;
      if (!this.currentFrame) return 0;
      const e = this.currentFrame,
        t = e.branching;
      if (this.exiting && void 0 !== e.exitBranch) return e.exitBranch;
      if (t) {
        let e = 100 * Math.random();
        for (const n of t.branches) {
          if (e <= n.weight) return n.frameIndex;
          e -= n.weight;
        }
      }
      return this.currentFrameIndex + 1;
    }
    draw() {
      const e = this.currentFrame?.images || [];
      for (let t = 0; t < this.overlays.length; t++)
        if (t < e.length) {
          const [n, i] = e[t],
            o = `-${n}px -${i}px`;
          ((this.overlays[t].style.backgroundPosition = o),
            (this.overlays[t].style.display = "block"));
        } else this.overlays[t].style.display = "none";
    }
    playSound() {
      if (!this.currentFrame?.sound) return;
      const e = this.currentFrame.sound;
      if ("string" == typeof e) {
        const t = this.sounds[e];
        t && t.play().catch(() => {});
      }
    }
    atLastFrame() {
      return (
        !!this.currentAnimation &&
        this.currentFrameIndex >= this.currentAnimation.frames.length - 1
      );
    }
    destroy() {
      (this.pause(), (this.overlays = []), (this.sounds = {}));
    }
  }
  i.States = { WAITING: "WAITING", EXITED: "EXITED", PLAYING: "PLAYING" };
  class o {
    constructor(e) {
      ((this.hidden = !0),
        (this.active = !1),
        (this.hold = !1),
        (this.WORD_SPEAK_TIME = 200),
        (this.CLOSE_BALLOON_DELAY = 2e3),
        (this.BALLOON_MARGIN = 15),
        (this.targetEl = e),
        (this.balloonEl = this.createBalloonElement()),
        (this.contentEl = this.balloonEl.querySelector(".clippy-content")),
        (this.tipEl = this.balloonEl.querySelector(".clippy-tip")),
        document.body.appendChild(this.balloonEl));
    }
    createBalloonElement() {
      const e = document.createElement("div");
      ((e.className = "clippy-balloon"), (e.style.display = "none"));
      const t = document.createElement("div");
      t.className = "clippy-tip";
      const n = document.createElement("div");
      return (
        (n.className = "clippy-content"),
        e.appendChild(t),
        e.appendChild(n),
        e
      );
    }
    speak(e, t = !1) {
      return new Promise((n) => {
        ((this.hidden = !1),
          this.show(),
          (this.contentEl.style.height = "auto"),
          (this.contentEl.style.width = "auto"),
          (this.contentEl.textContent = e));
        const i = this.contentEl.offsetHeight,
          o = this.contentEl.offsetWidth;
        ((this.contentEl.style.height = `${i}px`),
          (this.contentEl.style.width = `${o}px`),
          (this.contentEl.textContent = ""),
          this.reposition(),
          (this.completeCallback = n),
          this.sayWords(e, t));
      });
    }
    show() {
      this.hidden || (this.balloonEl.style.display = "block");
    }
    hide(e = !1) {
      if (e)
        return (
          (this.balloonEl.style.display = "none"),
          void (this.hidden = !0)
        );
      this.hidingTimeout = window.setTimeout(() => {
        this.finishHideBalloon();
      }, this.CLOSE_BALLOON_DELAY);
    }
    close() {
      this.active
        ? (this.hold = !1)
        : this.hold && this.completeCallback && this.completeCallback();
    }
    pause() {
      (this.wordTimeout && window.clearTimeout(this.wordTimeout),
        this.hidingTimeout &&
          (window.clearTimeout(this.hidingTimeout),
          (this.hidingTimeout = void 0)));
    }
    resume() {
      this.active
        ? this.addWord && this.addWord()
        : this.hold ||
          this.hidden ||
          (this.hidingTimeout = window.setTimeout(() => {
            this.finishHideBalloon();
          }, this.CLOSE_BALLOON_DELAY));
    }
    reposition() {
      const e = ["top-left", "top-right", "bottom-left", "bottom-right"];
      for (const t of e) if ((this.position(t), !this.isOutOfBounds())) break;
    }
    position(e) {
      const t = this.targetEl.getBoundingClientRect(),
        n = this.balloonEl.offsetHeight,
        i = this.balloonEl.offsetWidth;
      this.balloonEl.classList.remove(
        "clippy-top-left",
        "clippy-top-right",
        "clippy-bottom-left",
        "clippy-bottom-right",
      );
      let o = 0,
        r = 0;
      switch (e) {
        case "top-left":
          ((o = t.left + t.width - i), (r = t.top - n - this.BALLOON_MARGIN));
          break;
        case "top-right":
          ((o = t.left), (r = t.top - n - this.BALLOON_MARGIN));
          break;
        case "bottom-right":
          ((o = t.left), (r = t.top + t.height + this.BALLOON_MARGIN));
          break;
        case "bottom-left":
          ((o = t.left + t.width - i),
            (r = t.top + t.height + this.BALLOON_MARGIN));
      }
      ((this.balloonEl.style.top = `${r}px`),
        (this.balloonEl.style.left = `${o}px`),
        this.balloonEl.classList.add(`clippy-${e}`));
    }
    isOutOfBounds() {
      const e = this.balloonEl.getBoundingClientRect();
      return (
        e.top - 5 < 0 ||
        e.left - 5 < 0 ||
        e.bottom + 5 > window.innerHeight ||
        e.right + 5 > window.innerWidth
      );
    }
    sayWords(e, t) {
      ((this.active = !0), (this.hold = t));
      const n = e.split(/\s+/);
      let i = 0;
      const o = () => {
        this.active &&
          (i >= n.length
            ? ((this.active = !1),
              this.hold ||
                (this.completeCallback && this.completeCallback(), this.hide()))
            : ((this.contentEl.textContent = n.slice(0, i + 1).join(" ")),
              i++,
              (this.wordTimeout = window.setTimeout(o, this.WORD_SPEAK_TIME))));
      };
      ((this.addWord = o), o());
    }
    finishHideBalloon() {
      this.active ||
        ((this.balloonEl.style.display = "none"),
        (this.hidden = !0),
        (this.hidingTimeout = void 0));
    }
    destroy() {
      (this.hidingTimeout && window.clearTimeout(this.hidingTimeout),
        this.wordTimeout && window.clearTimeout(this.wordTimeout),
        this.balloonEl.remove());
    }
  }
  class r {
    constructor(e, t, r, s) {
      ((this.hidden = !1),
        (this.handleResize = () => {
          this.reposition();
        }),
        (this.path = e),
        (this.element = document.createElement("div")),
        (this.element.className = "clippy"),
        (this.element.style.display = "none"),
        (this.element.style.position = "fixed"),
        (this.element.style.zIndex = "9999"),
        document.body.appendChild(this.element),
        (this.queue = new n(() => this.onQueueEmpty())),
        (this.animator = new i(this.element, e, t, r)),
        (this.balloon = new o(this.element)),
        this.setupEvents(s));
    }
    async show(e = !1) {
      if (((this.hidden = !1), e))
        return (
          (this.element.style.display = "block"),
          this.resume(),
          this.onQueueEmpty(),
          Promise.resolve()
        );
      if (
        "auto" === this.element.style.top ||
        "auto" === this.element.style.left
      ) {
        const e = 0.8 * window.innerWidth,
          t = 0.8 * (window.innerHeight + window.scrollY);
        ((this.element.style.left = `${e}px`),
          (this.element.style.top = `${t}px`));
      }
      return (
        (this.element.style.display = "block"),
        this.resume(),
        this.play("Show")
      );
    }
    async hide(e = !1) {
      return (
        (this.hidden = !0),
        this.stop(),
        e
          ? ((this.element.style.display = "none"),
            this.pause(),
            Promise.resolve())
          : new Promise((e) => {
              this.playInternal("Hide", (t, n) => {
                n === i.States.EXITED &&
                  ((this.element.style.display = "none"), this.pause(), e());
              });
            })
      );
    }
    play(e, t = 5e3) {
      return this.hasAnimation(e)
        ? new Promise((n) => {
            this.queue.enqueue((o) => {
              let r = !1;
              (t &&
                window.setTimeout(() => {
                  r || this.animator.exitAnimation();
                }, t),
                this.playInternal(e, (e, t) => {
                  t === i.States.EXITED && ((r = !0), n(), o());
                }));
            });
          })
        : Promise.reject(new Error(`Animation "${e}" not found`));
    }
    speak(e, t = !1) {
      return new Promise((n) => {
        this.queue.enqueue(async (i) => {
          (await this.balloon.speak(e, t), i(), n());
        });
      });
    }
    closeBalloon() {
      this.balloon.hide();
    }
    moveTo(e, t, n = 1e3) {
      const o = `Move${this.getDirection(e, t)}`;
      return new Promise((r) => {
        this.queue.enqueue((s) => {
          if (0 === n)
            return (
              (this.element.style.left = `${e}px`),
              (this.element.style.top = `${t}px`),
              this.reposition(),
              s(),
              void r()
            );
          if (!this.hasAnimation(o))
            return void this.animatePosition(e, t, n, () => {
              (s(), r());
            });
          this.playInternal(o, (o, a) => {
            a === i.States.EXITED
              ? (s(), r())
              : a === i.States.WAITING &&
                this.animatePosition(e, t, n, () => {
                  this.animator.exitAnimation();
                });
          });
        });
      });
    }
    async gestureAt(e, t) {
      const n = this.getDirection(e, t),
        i = `Gesture${n}`,
        o = `Look${n}`,
        r = this.hasAnimation(i) ? i : o;
      return this.play(r);
    }
    async animate() {
      const e = this.getAnimations().filter((e) => !e.startsWith("Idle"));
      if (0 === e.length) return Promise.resolve();
      const t = e[Math.floor(Math.random() * e.length)];
      return this.play(t);
    }
    delay(e = 250) {
      return new Promise((t) => {
        this.queue.enqueue((n) => {
          (this.onQueueEmpty(),
            window.setTimeout(() => {
              (n(), t());
            }, e));
        });
      });
    }
    stop() {
      (this.queue.clear(), this.animator.exitAnimation(), this.balloon.hide());
    }
    stopCurrent() {
      (this.animator.exitAnimation(), this.balloon.close());
    }
    pause() {
      (this.animator.pause(), this.balloon.pause());
    }
    resume() {
      (this.animator.resume(), this.balloon.resume());
    }
    hasAnimation(e) {
      return this.animator.hasAnimation(e);
    }
    getAnimations() {
      return this.animator.getAnimations();
    }
    reposition() {
      if (!this.isVisible()) return;
      const e = this.element.getBoundingClientRect();
      let { top: t, left: n } = e;
      (t - 5 < 0
        ? (t = 5)
        : t + e.height + 5 > window.innerHeight &&
          (t = window.innerHeight - e.height - 5),
        n - 5 < 0
          ? (n = 5)
          : n + e.width + 5 > window.innerWidth &&
            (n = window.innerWidth - e.width - 5),
        (this.element.style.left = `${n}px`),
        (this.element.style.top = `${t}px`),
        this.balloon.reposition());
    }
    destroy() {
      (this.stop(),
        window.removeEventListener("resize", this.handleResize),
        this.element.remove(),
        this.animator.destroy(),
        this.balloon.destroy());
    }
    setupEvents(e) {
      ((this.handleResize = this.handleResize.bind(this)),
        window.addEventListener("resize", this.handleResize),
        this.element.addEventListener("mousedown", (e) => this.onMouseDown(e)),
        this.element.addEventListener("dblclick", () => this.onDoubleClick(e)));
    }
    onMouseDown(e) {
      (e.preventDefault(), this.startDrag(e));
    }
    onDoubleClick(e) {
      e?.onDoubleClick
        ? e.onDoubleClick()
        : this.play("ClickedOn") || this.animate();
    }
    startDrag(e) {
      (this.pause(), this.balloon.hide(!0));
      const t = this.element.getBoundingClientRect();
      ((this.dragOffset = { top: e.clientY - t.top, left: e.clientX - t.left }),
        (this.moveHandler = (e) => this.dragMove(e)),
        (this.upHandler = () => this.finishDrag()),
        window.addEventListener("mousemove", this.moveHandler),
        window.addEventListener("mouseup", this.upHandler),
        this.updateDragPosition());
    }
    dragMove(e) {
      (e.preventDefault(),
        this.dragOffset &&
          ((this.targetX = e.clientX - this.dragOffset.left),
          (this.targetY = e.clientY - this.dragOffset.top)));
    }
    updateDragPosition() {
      (void 0 !== this.targetX &&
        void 0 !== this.targetY &&
        ((this.element.style.left = `${this.targetX}px`),
        (this.element.style.top = `${this.targetY}px`)),
        (this.dragUpdateLoop = window.setTimeout(
          () => this.updateDragPosition(),
          10,
        )));
    }
    finishDrag() {
      (this.dragUpdateLoop && window.clearTimeout(this.dragUpdateLoop),
        this.moveHandler &&
          this.upHandler &&
          (window.removeEventListener("mousemove", this.moveHandler),
          window.removeEventListener("mouseup", this.upHandler)),
        this.balloon.show(),
        this.reposition(),
        this.resume());
    }
    playInternal(e, t) {
      this.isIdleAnimation() && this.idleDeferred
        ? this.idleDeferred.then(() => {
            this.playInternal(e, t);
          })
        : this.animator.showAnimation(e, t);
    }
    onQueueEmpty() {
      if (this.hidden || this.isIdleAnimation()) return;
      const e = this.getIdleAnimation();
      ((this.idleDeferred = new Promise((e) => {
        this.idleResolve = e;
      })),
        this.animator.showAnimation(e, (e, t) => {
          t === i.States.EXITED &&
            this.idleResolve &&
            (this.idleResolve(),
            (this.idleDeferred = void 0),
            (this.idleResolve = void 0));
        }));
    }
    isIdleAnimation() {
      const e = this.animator.currentAnimationName;
      return !!e && e.startsWith("Idle");
    }
    getIdleAnimation() {
      const e = this.getAnimations(),
        t = e.filter((e) => e.startsWith("Idle"));
      return 0 === t.length
        ? e[0] || "Idle1"
        : t[Math.floor(Math.random() * t.length)];
    }
    getDirection(e, t) {
      const n = this.element.getBoundingClientRect(),
        i = n.left + n.width / 2,
        o = n.top + n.height / 2 - t,
        r = i - e,
        s = Math.round((180 * Math.atan2(o, r)) / Math.PI);
      return -45 <= s && s < 45
        ? "Right"
        : 45 <= s && s < 135
          ? "Up"
          : (135 <= s && s <= 180) || (-180 <= s && s < -135)
            ? "Left"
            : -135 <= s && s < -45
              ? "Down"
              : "Up";
    }
    animatePosition(e, t, n, i) {
      const o = parseInt(this.element.style.left) || 0,
        r = parseInt(this.element.style.top) || 0,
        s = Date.now(),
        a = () => {
          const l = Date.now() - s,
            u = Math.min(l / n, 1),
            c = o + (e - o) * u,
            h = r + (t - r) * u;
          ((this.element.style.left = `${c}px`),
            (this.element.style.top = `${h}px`),
            u < 1 ? requestAnimationFrame(a) : i());
        };
      a();
    }
    isVisible() {
      return "none" !== this.element.style.display;
    }
  }
  const s = new Map(),
    a = new Map(),
    l = new Map(),
    u = new Map(),
    c = new Map();
  async function h(e, t) {
    const n = `${t?.basePath || window.CLIPPY_CDN || "https://gitcdn.xyz/repo/pi0/clippyjs/master/assets/agents/"}${e}`,
      [, i, o] = await Promise.all([p(n), d(e, n), f(e, n)]);
    return new r(n, i, o);
  }
  async function p(e) {
    const t = s.get(e);
    if (t) return t;
    const n = new Promise((t, n) => {
      const i = new Image();
      ((i.onload = () => t()),
        (i.onerror = () => n(new Error(`Failed to load map: ${e}/map.png`))),
        (i.src = `${e}/map.png`));
    });
    return (s.set(e, n), n);
  }
  async function d(e, t) {
    const n = l.get(e);
    if (n) return n;
    const i = new Promise((n, i) => {
      u.set(e, n);
      const o = document.createElement("script");
      ((o.src = `${t}/agent.js`),
        (o.async = !0),
        (o.onerror = () => {
          (u.delete(e),
            i(new Error(`Failed to load agent data: ${t}/agent.js`)));
        }),
        document.head.appendChild(o));
    });
    return (l.set(e, i), i);
  }
  async function f(e, t) {
    const n = a.get(e);
    if (n) return n;
    const i = new Promise((n, i) => {
      const o = document.createElement("audio"),
        r = !!o.canPlayType && "" !== o.canPlayType("audio/mpeg"),
        s =
          !!o.canPlayType && "" !== o.canPlayType('audio/ogg; codecs="vorbis"');
      if (!r && !s) return void n({});
      c.set(e, n);
      const a = r ? "sounds-mp3.js" : "sounds-ogg.js",
        l = document.createElement("script");
      ((l.src = `${t}/${a}`),
        (l.async = !0),
        (l.onerror = () => {
          (c.delete(e), n({}));
        }),
        document.head.appendChild(l));
    });
    return (a.set(e, i), i);
  }
  function m(e, t) {
    const n = u.get(e);
    n && (n(t), u.delete(e));
  }
  function y(e, t) {
    const n = c.get(e);
    n && (n(t), c.delete(e));
  }
  "undefined" != typeof window &&
    (window.clippy = { ...(window.clippy || {}), ready: m, soundsReady: y });
  var g,
    v = { exports: {} },
    w = {};
  var b,
    E = {};
  /**
   * @license React
   * react-jsx-runtime.development.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   */ "production" === "development"
    ? (v.exports = (function () {
        if (g) return w;
        g = 1;
        var e = t,
          n = Symbol.for("react.element"),
          i = Symbol.for("react.fragment"),
          o = Object.prototype.hasOwnProperty,
          r =
            e.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED
              .ReactCurrentOwner,
          s = { key: !0, ref: !0, __self: !0, __source: !0 };
        function a(e, t, i) {
          var a,
            l = {},
            u = null,
            c = null;
          for (a in (void 0 !== i && (u = "" + i),
          void 0 !== t.key && (u = "" + t.key),
          void 0 !== t.ref && (c = t.ref),
          t))
            o.call(t, a) && !s.hasOwnProperty(a) && (l[a] = t[a]);
          if (e && e.defaultProps)
            for (a in (t = e.defaultProps)) void 0 === l[a] && (l[a] = t[a]);
          return {
            $$typeof: n,
            type: e,
            key: u,
            ref: c,
            props: l,
            _owner: r.current,
          };
        }
        return ((w.Fragment = i), (w.jsx = a), (w.jsxs = a), w);
      })())
    : (v.exports =
        (b ||
          ((b = 1),
          "production" !== "development" &&
            (function () {
              var e,
                n = t,
                i = Symbol.for("react.element"),
                o = Symbol.for("react.portal"),
                r = Symbol.for("react.fragment"),
                s = Symbol.for("react.strict_mode"),
                a = Symbol.for("react.profiler"),
                l = Symbol.for("react.provider"),
                u = Symbol.for("react.context"),
                c = Symbol.for("react.forward_ref"),
                h = Symbol.for("react.suspense"),
                p = Symbol.for("react.suspense_list"),
                d = Symbol.for("react.memo"),
                f = Symbol.for("react.lazy"),
                m = Symbol.for("react.offscreen"),
                y = Symbol.iterator,
                g = n.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
              function v(e) {
                for (
                  var t = arguments.length,
                    n = new Array(t > 1 ? t - 1 : 0),
                    i = 1;
                  i < t;
                  i++
                )
                  n[i - 1] = arguments[i];
                !(function (e, t, n) {
                  var i = g.ReactDebugCurrentFrame.getStackAddendum();
                  "" !== i && ((t += "%s"), (n = n.concat([i])));
                  var o = n.map(function (e) {
                    return String(e);
                  });
                  (o.unshift("Warning: " + t),
                    Function.prototype.apply.call(console[e], console, o));
                })("error", e, n);
              }
              function w(e) {
                return e.displayName || "Context";
              }
              function b(e) {
                if (null == e) return null;
                if (
                  ("number" == typeof e.tag &&
                    v(
                      "Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue.",
                    ),
                  "function" == typeof e)
                )
                  return e.displayName || e.name || null;
                if ("string" == typeof e) return e;
                switch (e) {
                  case r:
                    return "Fragment";
                  case o:
                    return "Portal";
                  case a:
                    return "Profiler";
                  case s:
                    return "StrictMode";
                  case h:
                    return "Suspense";
                  case p:
                    return "SuspenseList";
                }
                if ("object" == typeof e)
                  switch (e.$$typeof) {
                    case u:
                      return w(e) + ".Consumer";
                    case l:
                      return w(e._context) + ".Provider";
                    case c:
                      return (function (e, t, n) {
                        var i = e.displayName;
                        if (i) return i;
                        var o = t.displayName || t.name || "";
                        return "" !== o ? n + "(" + o + ")" : n;
                      })(e, e.render, "ForwardRef");
                    case d:
                      var t = e.displayName || null;
                      return null !== t ? t : b(e.type) || "Memo";
                    case f:
                      var n = e,
                        i = n._payload,
                        m = n._init;
                      try {
                        return b(m(i));
                      } catch (e) {
                        return null;
                      }
                  }
                return null;
              }
              e = Symbol.for("react.module.reference");
              var k,
                A,
                _,
                x,
                O,
                S,
                T,
                P = Object.assign,
                R = 0;
              function C() {}
              C.__reactDisabledLog = !0;
              var I,
                $ = g.ReactCurrentDispatcher;
              function D(e, t, n) {
                if (void 0 === I)
                  try {
                    throw Error();
                  } catch (e) {
                    var i = e.stack.trim().match(/\n( *(at )?)/);
                    I = (i && i[1]) || "";
                  }
                return "\n" + I + e;
              }
              var j,
                L = !1,
                N = "function" == typeof WeakMap ? WeakMap : Map;
              function F(e, t) {
                if (!e || L) return "";
                var n,
                  i = j.get(e);
                if (void 0 !== i) return i;
                L = !0;
                var o,
                  r = Error.prepareStackTrace;
                ((Error.prepareStackTrace = void 0),
                  (o = $.current),
                  ($.current = null),
                  (function () {
                    if (0 === R) {
                      ((k = console.log),
                        (A = console.info),
                        (_ = console.warn),
                        (x = console.error),
                        (O = console.group),
                        (S = console.groupCollapsed),
                        (T = console.groupEnd));
                      var e = {
                        configurable: !0,
                        enumerable: !0,
                        value: C,
                        writable: !0,
                      };
                      Object.defineProperties(console, {
                        info: e,
                        log: e,
                        warn: e,
                        error: e,
                        group: e,
                        groupCollapsed: e,
                        groupEnd: e,
                      });
                    }
                    R++;
                  })());
                try {
                  if (t) {
                    var s = function () {
                      throw Error();
                    };
                    if (
                      (Object.defineProperty(s.prototype, "props", {
                        set: function () {
                          throw Error();
                        },
                      }),
                      "object" == typeof Reflect && Reflect.construct)
                    ) {
                      try {
                        Reflect.construct(s, []);
                      } catch (e) {
                        n = e;
                      }
                      Reflect.construct(e, [], s);
                    } else {
                      try {
                        s.call();
                      } catch (e) {
                        n = e;
                      }
                      e.call(s.prototype);
                    }
                  } else {
                    try {
                      throw Error();
                    } catch (e) {
                      n = e;
                    }
                    e();
                  }
                } catch (t) {
                  if (t && n && "string" == typeof t.stack) {
                    for (
                      var a = t.stack.split("\n"),
                        l = n.stack.split("\n"),
                        u = a.length - 1,
                        c = l.length - 1;
                      u >= 1 && c >= 0 && a[u] !== l[c];

                    )
                      c--;
                    for (; u >= 1 && c >= 0; u--, c--)
                      if (a[u] !== l[c]) {
                        if (1 !== u || 1 !== c)
                          do {
                            if ((u--, --c < 0 || a[u] !== l[c])) {
                              var h = "\n" + a[u].replace(" at new ", " at ");
                              return (
                                e.displayName &&
                                  h.includes("<anonymous>") &&
                                  (h = h.replace("<anonymous>", e.displayName)),
                                "function" == typeof e && j.set(e, h),
                                h
                              );
                            }
                          } while (u >= 1 && c >= 0);
                        break;
                      }
                  }
                } finally {
                  ((L = !1),
                    ($.current = o),
                    (function () {
                      if (0 === --R) {
                        var e = {
                          configurable: !0,
                          enumerable: !0,
                          writable: !0,
                        };
                        Object.defineProperties(console, {
                          log: P({}, e, { value: k }),
                          info: P({}, e, { value: A }),
                          warn: P({}, e, { value: _ }),
                          error: P({}, e, { value: x }),
                          group: P({}, e, { value: O }),
                          groupCollapsed: P({}, e, { value: S }),
                          groupEnd: P({}, e, { value: T }),
                        });
                      }
                      R < 0 &&
                        v(
                          "disabledDepth fell below zero. This is a bug in React. Please file an issue.",
                        );
                    })(),
                    (Error.prepareStackTrace = r));
                }
                var p = e ? e.displayName || e.name : "",
                  d = p ? D(p) : "";
                return ("function" == typeof e && j.set(e, d), d);
              }
              function M(e, t, n) {
                if (null == e) return "";
                if ("function" == typeof e)
                  return F(e, !(!(i = e.prototype) || !i.isReactComponent));
                var i;
                if ("string" == typeof e) return D(e);
                switch (e) {
                  case h:
                    return D("Suspense");
                  case p:
                    return D("SuspenseList");
                }
                if ("object" == typeof e)
                  switch (e.$$typeof) {
                    case c:
                      return F(e.render, !1);
                    case d:
                      return M(e.type, t, n);
                    case f:
                      var o = e,
                        r = o._payload,
                        s = o._init;
                      try {
                        return M(s(r), t, n);
                      } catch (e) {}
                  }
                return "";
              }
              j = new N();
              var B = Object.prototype.hasOwnProperty,
                W = {},
                q = g.ReactDebugCurrentFrame;
              function H(e) {
                if (e) {
                  var t = e._owner,
                    n = M(e.type, e._source, t ? t.type : null);
                  q.setExtraStackFrame(n);
                } else q.setExtraStackFrame(null);
              }
              var z = Array.isArray;
              function Y(e) {
                return z(e);
              }
              function U(e) {
                return "" + e;
              }
              function X(e) {
                if (
                  (function (e) {
                    try {
                      return (U(e), !1);
                    } catch (e) {
                      return !0;
                    }
                  })(e)
                )
                  return (
                    v(
                      "The provided key is an unsupported type %s. This value must be coerced to a string before before using it here.",
                      (function (e) {
                        return (
                          ("function" == typeof Symbol &&
                            Symbol.toStringTag &&
                            e[Symbol.toStringTag]) ||
                          e.constructor.name ||
                          "Object"
                        );
                      })(e),
                    ),
                    U(e)
                  );
              }
              var G,
                Q,
                V = g.ReactCurrentOwner,
                K = { key: !0, ref: !0, __self: !0, __source: !0 };
              function J(e, t, n, o, r) {
                var s,
                  a = {},
                  l = null,
                  u = null;
                for (s in (void 0 !== n && (X(n), (l = "" + n)),
                (function (e) {
                  if (B.call(e, "key")) {
                    var t = Object.getOwnPropertyDescriptor(e, "key").get;
                    if (t && t.isReactWarning) return !1;
                  }
                  return void 0 !== e.key;
                })(t) && (X(t.key), (l = "" + t.key)),
                (function (e) {
                  if (B.call(e, "ref")) {
                    var t = Object.getOwnPropertyDescriptor(e, "ref").get;
                    if (t && t.isReactWarning) return !1;
                  }
                  return void 0 !== e.ref;
                })(t) &&
                  ((u = t.ref),
                  (function (e) {
                    "string" == typeof e.ref && V.current;
                  })(t)),
                t))
                  B.call(t, s) && !K.hasOwnProperty(s) && (a[s] = t[s]);
                if (e && e.defaultProps) {
                  var c = e.defaultProps;
                  for (s in c) void 0 === a[s] && (a[s] = c[s]);
                }
                if (l || u) {
                  var h =
                    "function" == typeof e
                      ? e.displayName || e.name || "Unknown"
                      : e;
                  (l &&
                    (function (e, t) {
                      var n = function () {
                        G ||
                          ((G = !0),
                          v(
                            "%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)",
                            t,
                          ));
                      };
                      ((n.isReactWarning = !0),
                        Object.defineProperty(e, "key", {
                          get: n,
                          configurable: !0,
                        }));
                    })(a, h),
                    u &&
                      (function (e, t) {
                        var n = function () {
                          Q ||
                            ((Q = !0),
                            v(
                              "%s: `ref` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)",
                              t,
                            ));
                        };
                        ((n.isReactWarning = !0),
                          Object.defineProperty(e, "ref", {
                            get: n,
                            configurable: !0,
                          }));
                      })(a, h));
                }
                return (function (e, t, n, o, r, s, a) {
                  var l = {
                    $$typeof: i,
                    type: e,
                    key: t,
                    ref: n,
                    props: a,
                    _owner: s,
                    _store: {},
                  };
                  return (
                    Object.defineProperty(l._store, "validated", {
                      configurable: !1,
                      enumerable: !1,
                      writable: !0,
                      value: !1,
                    }),
                    Object.defineProperty(l, "_self", {
                      configurable: !1,
                      enumerable: !1,
                      writable: !1,
                      value: o,
                    }),
                    Object.defineProperty(l, "_source", {
                      configurable: !1,
                      enumerable: !1,
                      writable: !1,
                      value: r,
                    }),
                    Object.freeze && (Object.freeze(l.props), Object.freeze(l)),
                    l
                  );
                })(e, l, u, r, o, V.current, a);
              }
              var Z,
                ee = g.ReactCurrentOwner,
                te = g.ReactDebugCurrentFrame;
              function ne(e) {
                if (e) {
                  var t = e._owner,
                    n = M(e.type, e._source, t ? t.type : null);
                  te.setExtraStackFrame(n);
                } else te.setExtraStackFrame(null);
              }
              function ie(e) {
                return "object" == typeof e && null !== e && e.$$typeof === i;
              }
              function oe() {
                if (ee.current) {
                  var e = b(ee.current.type);
                  if (e) return "\n\nCheck the render method of `" + e + "`.";
                }
                return "";
              }
              Z = !1;
              var re = {};
              function se(e, t) {
                if (e._store && !e._store.validated && null == e.key) {
                  e._store.validated = !0;
                  var n = (function (e) {
                    var t = oe();
                    if (!t) {
                      var n =
                        "string" == typeof e ? e : e.displayName || e.name;
                      n &&
                        (t =
                          "\n\nCheck the top-level render call using <" +
                          n +
                          ">.");
                    }
                    return t;
                  })(t);
                  if (!re[n]) {
                    re[n] = !0;
                    var i = "";
                    (e &&
                      e._owner &&
                      e._owner !== ee.current &&
                      (i =
                        " It was passed a child from " +
                        b(e._owner.type) +
                        "."),
                      ne(e),
                      v(
                        'Each child in a list should have a unique "key" prop.%s%s See https://reactjs.org/link/warning-keys for more information.',
                        n,
                        i,
                      ),
                      ne(null));
                  }
                }
              }
              function ae(e, t) {
                if ("object" == typeof e)
                  if (Y(e))
                    for (var n = 0; n < e.length; n++) {
                      var i = e[n];
                      ie(i) && se(i, t);
                    }
                  else if (ie(e)) e._store && (e._store.validated = !0);
                  else if (e) {
                    var o = (function (e) {
                      if (null === e || "object" != typeof e) return null;
                      var t = (y && e[y]) || e["@@iterator"];
                      return "function" == typeof t ? t : null;
                    })(e);
                    if ("function" == typeof o && o !== e.entries)
                      for (var r, s = o.call(e); !(r = s.next()).done; )
                        ie(r.value) && se(r.value, t);
                  }
              }
              function le(e) {
                var t,
                  n = e.type;
                if (null != n && "string" != typeof n) {
                  if ("function" == typeof n) t = n.propTypes;
                  else {
                    if (
                      "object" != typeof n ||
                      (n.$$typeof !== c && n.$$typeof !== d)
                    )
                      return;
                    t = n.propTypes;
                  }
                  if (t) {
                    var i = b(n);
                    !(function (e, t, n, i, o) {
                      var r = Function.call.bind(B);
                      for (var s in e)
                        if (r(e, s)) {
                          var a = void 0;
                          try {
                            if ("function" != typeof e[s]) {
                              var l = Error(
                                (i || "React class") +
                                  ": " +
                                  n +
                                  " type `" +
                                  s +
                                  "` is invalid; it must be a function, usually from the `prop-types` package, but received `" +
                                  typeof e[s] +
                                  "`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.",
                              );
                              throw ((l.name = "Invariant Violation"), l);
                            }
                            a = e[s](
                              t,
                              s,
                              i,
                              n,
                              null,
                              "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED",
                            );
                          } catch (e) {
                            a = e;
                          }
                          (!a ||
                            a instanceof Error ||
                            (H(o),
                            v(
                              "%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).",
                              i || "React class",
                              n,
                              s,
                              typeof a,
                            ),
                            H(null)),
                            a instanceof Error &&
                              !(a.message in W) &&
                              ((W[a.message] = !0),
                              H(o),
                              v("Failed %s type: %s", n, a.message),
                              H(null)));
                        }
                    })(t, e.props, "prop", i, e);
                  } else
                    void 0 === n.PropTypes ||
                      Z ||
                      ((Z = !0),
                      v(
                        "Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?",
                        b(n) || "Unknown",
                      ));
                  "function" != typeof n.getDefaultProps ||
                    n.getDefaultProps.isReactClassApproved ||
                    v(
                      "getDefaultProps is only used on classic React.createClass definitions. Use a static property named `defaultProps` instead.",
                    );
                }
              }
              var ue = {};
              function ce(t, n, o, y, g, w) {
                var E = (function (t) {
                  return (
                    "string" == typeof t ||
                    "function" == typeof t ||
                    t === r ||
                    t === a ||
                    t === s ||
                    t === h ||
                    t === p ||
                    t === m ||
                    ("object" == typeof t &&
                      null !== t &&
                      (t.$$typeof === f ||
                        t.$$typeof === d ||
                        t.$$typeof === l ||
                        t.$$typeof === u ||
                        t.$$typeof === c ||
                        t.$$typeof === e ||
                        void 0 !== t.getModuleId))
                  );
                })(t);
                if (!E) {
                  var k,
                    A = "";
                  ((void 0 === t ||
                    ("object" == typeof t &&
                      null !== t &&
                      0 === Object.keys(t).length)) &&
                    (A +=
                      " You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports."),
                    (A += oe()),
                    null === t
                      ? (k = "null")
                      : Y(t)
                        ? (k = "array")
                        : void 0 !== t && t.$$typeof === i
                          ? ((k = "<" + (b(t.type) || "Unknown") + " />"),
                            (A =
                              " Did you accidentally export a JSX literal instead of a component?"))
                          : (k = typeof t),
                    v(
                      "React.jsx: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s",
                      k,
                      A,
                    ));
                }
                var _ = J(t, n, o, g, w);
                if (null == _) return _;
                if (E) {
                  var x = n.children;
                  if (void 0 !== x)
                    if (y)
                      if (Y(x)) {
                        for (var O = 0; O < x.length; O++) ae(x[O], t);
                        Object.freeze && Object.freeze(x);
                      } else
                        v(
                          "React.jsx: Static children should always be an array. You are likely explicitly calling React.jsxs or React.jsxDEV. Use the Babel transform instead.",
                        );
                    else ae(x, t);
                }
                if (B.call(n, "key")) {
                  var S = b(t),
                    T = Object.keys(n).filter(function (e) {
                      return "key" !== e;
                    }),
                    P =
                      T.length > 0
                        ? "{key: someKey, " + T.join(": ..., ") + ": ...}"
                        : "{key: someKey}";
                  ue[S + P] ||
                    (v(
                      'A props object containing a "key" prop is being spread into JSX:\n  let props = %s;\n  <%s {...props} />\nReact keys must be passed directly to JSX without using spread:\n  let props = %s;\n  <%s key={someKey} {...props} />',
                      P,
                      S,
                      T.length > 0 ? "{" + T.join(": ..., ") + ": ...}" : "{}",
                      S,
                    ),
                    (ue[S + P] = !0));
                }
                return (
                  t === r
                    ? (function (e) {
                        for (
                          var t = Object.keys(e.props), n = 0;
                          n < t.length;
                          n++
                        ) {
                          var i = t[n];
                          if ("children" !== i && "key" !== i) {
                            (ne(e),
                              v(
                                "Invalid prop `%s` supplied to `React.Fragment`. React.Fragment can only have `key` and `children` props.",
                                i,
                              ),
                              ne(null));
                            break;
                          }
                        }
                        null !== e.ref &&
                          (ne(e),
                          v(
                            "Invalid attribute `ref` supplied to `React.Fragment`.",
                          ),
                          ne(null));
                      })(_)
                    : le(_),
                  _
                );
              }
              var he = function (e, t, n) {
                  return ce(e, t, n, !1);
                },
                pe = function (e, t, n) {
                  return ce(e, t, n, !0);
                };
              ((E.Fragment = r), (E.jsx = he), (E.jsxs = pe));
            })()),
        E));
  var k = v.exports;
  const A = t.createContext(void 0),
    _ = () => {
      const e = t.useContext(A);
      if (!e) throw new Error("useClippy must be used within a ClippyProvider");
      return e;
    },
    x = {
      load: h,
      ready: m,
      soundsReady: y,
      Agent: r,
      Animator: i,
      Balloon: o,
      Queue: n,
    };
  ("undefined" != typeof window && (window.clippy = x),
    (e.Agent = r),
    (e.Animator = i),
    (e.Balloon = o),
    (e.Clippy = ({
      name: e,
      basePath: n,
      showOnLoad: i = !0,
      onLoad: o,
      onError: r,
      position: s,
      speak: a,
      holdSpeech: l = !1,
    }) => {
      const { loadAgent: u, getAgent: c, unloadAgent: h } = _(),
        [p, d] = t.useState(),
        [f, m] = t.useState(!0),
        [y, g] = t.useState(null),
        v = t.useRef(!0);
      return (
        t.useEffect(() => {
          let t;
          v.current = !0;
          return (
            (async () => {
              try {
                if (
                  (m(!0),
                  g(null),
                  (t = c(e)),
                  t
                    ? i && (await t.show())
                    : (t = await u(e, { basePath: n, show: i })),
                  !v.current)
                )
                  return;
                (d(t),
                  s && t && (await t.moveTo(s.x, s.y, 0)),
                  a && t && (await t.speak(a, l)),
                  o && t && o(t));
              } catch (e) {
                if (!v.current) return;
                const t = e;
                (g(t), r && r(t));
              } finally {
                v.current && m(!1);
              }
            })(),
            () => {
              v.current = !1;
            }
          );
        }, [e, n, i]),
        t.useEffect(() => {
          p && a && p.speak(a, l);
        }, [a, l]),
        null
      );
    }),
    (e.ClippyProvider = ({ children: e, defaultBasePath: n }) => {
      const [i, o] = t.useState(new Map());
      t.useEffect(
        () => () => {
          i.forEach((e) => e.destroy());
        },
        [],
      );
      const r = {
        agents: i,
        loadAgent: async (e, t) => {
          const r = i.get(e);
          if (r) return r;
          try {
            const i = await h(e, { basePath: t?.basePath || n });
            return (
              o((t) => new Map(t).set(e, i)),
              !1 !== t?.show && (await i.show()),
              i
            );
          } catch (t) {
            throw (console.error(`Failed to load agent ${e}:`, t), t);
          }
        },
        unloadAgent: (e) => {
          const t = i.get(e);
          t &&
            (t.destroy(),
            o((t) => {
              const n = new Map(t);
              return (n.delete(e), n);
            }));
        },
        getAgent: (e) => i.get(e),
      };
      return k.jsx(A.Provider, { value: r, children: e });
    }),
    (e.Queue = n),
    (e.default = x),
    (e.load = h),
    (e.ready = m),
    (e.soundsReady = y),
    (e.useAgent = (e) => {
      const { loadAgent: n, getAgent: i, unloadAgent: o } = _(),
        [r, s] = t.useState(() => i(e)),
        [a, l] = t.useState(!1),
        [u, c] = t.useState(null);
      return (
        t.useEffect(() => {
          const t = i(e);
          t !== r && s(t);
        }, [e]),
        {
          agent: r,
          loading: a,
          error: u,
          load: async () => {
            try {
              (l(!0), c(null));
              const t = await n(e);
              s(t);
            } catch (e) {
              c(e);
            } finally {
              l(!1);
            }
          },
          unload: () => {
            (o(e), s(void 0));
          },
        }
      );
    }),
    (e.useClippy = _),
    Object.defineProperty(e, "__esModule", { value: !0 }));
});
//# sourceMappingURL=clippy.min.js.map
